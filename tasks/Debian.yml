# APACHE installation
#check if apache installed
    - name: Check if Apache2 is installed
      command: dpkg -s apache2
      register: apache2_check
      # ignore_errors: true
      failed_when: "'Failed' in apache2_check.stderr"
    - name: show if apache2 alreday exist
      debug:
        msg: Apache2 is Already  exist
      when: apache2_check.rc == 0
    - name: show if apache2 not exist
      debug:
        msg: Apache2 not exist
      when: apache2_check.rc != 0
# check version of existing apache2
    - name: Check of version of existing apache2
      command: apache2 -v
      ignore_errors: true
      changed_when: false
      register: apache2_present
      failed_when: "'Failed' in apache2_check.stderr"
#display the version of existing version
    - name: Display apache2 version
      debug:
        msg: apache2 Version is "{{ apache2_present.stdout }}"
      when: apache2_check.rc == 0

    - name: update cache an install prerequisites on Debian
      apt: update_cache=yes state=latest force_apt_get=yes
      when: apache2_check.rc != 0
    - name: Installation of software-properties-common on Debian
      apt: name=software-properties-common
      when: apache2_check.rc != 0
#installing Apache2 on Debian
    - name: "Print execution results"
      debug:
        msg:  Apache2 Installation - started"
      when: apache2_check.rc != 0
#apache installation
    - name: Install Apache on Debian
      apt: name=apache2 update_cache=yes state=latest 
      when: apache2_check.rc != 0
# check version of newly installed apache2
    - name: Checking apache2 version
      command: apache2 -v
      ignore_errors: true
      changed_when: false
      register: new_apache2_installed
#show newly installd apache2 version
    - name: Display apache2 version
      debug:
        msg: apache2 Version is "{{ new_apache2_installed.stdout }}"
      when: new_apache2_installed.rc == 0
# show installation messaged
    - name: "Print execution results"
      debug:
        msg:  Apache2 Installation - Successful"
      when: new_apache2_installed.rc == 0
# setup apache2 virtualhost on Debian

    - name: Set up Apache2 virtualhost on Debian
      template:
        src: apache.conf.j2
        dest: "/etc/apache2/sites-available/"
# eanling ufw
    - name: Enabling UFW, allowing all traffic
      ufw:
        state: enabled
        policy: allow
      register: ufw_enable
    - debug:
          msg: "{{ ufw_enable }}"
#Check if ufw status is inactive
    - name: check whether ufw status is active
      shell: ufw status
      changed_when: false
      register: ufw_check
    - debug:
          msg: "{{ ufw_check }}"
#ufw allow port for apache2 on Debian
    - name: "UFW - Allow HTTP on port {{ http_port }} for apache2 on Debian"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp
      # when: "ufw_status.stdout.find('active') != -1"
      notify:
       - Reload Apache
       - Restart Apache
  # check if apache2 service
    - name: Get Apache service status
      shell: service apache2 status
      register: apache_status
      ignore_errors: true
      changed_when: false

    - name: Display Apache service status
      debug:
        var: apache_status.stdout
# print error message if apache service not started
    - name: Get Apache2 service status
      shell: systemctl is-active apache2
      register: apache2_status
    - name: Print error if Apache2 is not running
      debug:
        msg: "Apache2 is not running, please check the service."
      when: apache2_status.stdout != "active"
    - name: Print if Apache2 is running
      debug:
        var: apache2_status.stdout
      when: apache2_status.stdout == "active"

#php installation

    - name: Check if PHP is installed
      shell: dpkg -s php | grep Status
      register: result
      changed_when: false
      # ignore_errors: true
      failed_when: "'Failed' in result.stderr"
    - name: show if php alreday exist
      debug:
        msg: php is Already exist
      when: result.rc == 0
    - name: show if php not exist
      debug: 
        msg: php is  not exist
      when: result.rc != 0
    #installing php on Debian
    - name: "Print execution results"
      debug:
        msg:  php Installation - started"
      when: result.rc != 0

    - name: Install PHP
      shell: apt-get install php -y
      when: result.rc != 0
      args:
        warn: false
    # check version of newly installed php
    - name: Checking php version
      command: php --version
      ignore_errors: true
      changed_when: false
      register: new_php
      
    # setup PHP Info Page on Debian 
    - name: Sets Up PHP Info Page on Debian
      template:
        src: info.php.j2
        dest: "/var/www/html/info.php"
    - name: "Print execution results"
      debug:
        msg:  php Installation - Successful"
      when: new_php.rc == 0
    - name: Display php version
      debug:
        msg: PHP Version is "{{ new_php.stdout }}"
      when: new_php.rc == 0
# mysql installation 
    - name: Check version of existing mysql
      command: mysql --version
      ignore_errors: true
      changed_when: false
      register: mysql_installed
      # failed_when: "'Failed' in mysql_installed.stderr"
     
    - name: "Print execution results "
      debug:
        msg:  MySQL Installation - started"
      when: "mysql_installed.rc != 0"
    - name: Install MySQL server and client
      apt:
        name:
          - mysql-server
          - mysql-client
        state: present
      when: "mysql_installed.rc != 0"

    - name: Start MySQL server and enable on boot
      service:
        name: mysql
        state: started
        enabled: yes
    - name: Check if mysql is installed
      command: mysql --version
      register: mysql_check
    - name: "Print execution results"
      debug:
        msg:  mysql Installation - Successful"
      when: mysql_check.rc == 0
    - name: Display mysql version
      debug:
        msg: MySQL Version is "{{ mysql_check.stdout }}"
      when: mysql_check.rc == 0
      ignore_errors: true
    - name: Install python-pip
      package:
        name: python3-pip
        state: present
    # use python pip need for  below module pymysql
    - name: Install PyMySQL library
      pip:
        name: PyMySQL

    - name: Set MySQL root password
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host_all: yes
        check_implicit_admin: yes
        state: present